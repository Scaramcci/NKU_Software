{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u6587\\u96C5\\u7AF9\\\\\\u4F5C\\u4E1A\\\\\\u5927\\u4E09\\u4E0B\\\\\\u8F6F\\u4EF6\\u5DE5\\u7A0B\\\\NKU_Software\\\\frontend\\\\src\\\\components\\\\WaterQualityReport\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, Row, Col, Table, Tabs, Statistic, Alert, List, Tag, Divider, Typography, Select, Spin } from 'antd';\nimport { LineChartOutlined, BarChartOutlined, WarningOutlined, CheckCircleOutlined } from '@ant-design/icons';\nimport ReactECharts from 'echarts-for-react';\nimport { analyzeWaterQuality, generateWaterQualityTrendReport, generateWaterQualityAnomalyReport } from '../../services/dataService';\nimport { loadStationWaterQualityData, getAvailableStations } from '../../services/waterQualityService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst {\n  TabPane\n} = Tabs;\nconst {\n  Title,\n  Paragraph,\n  Text\n} = Typography;\nconst {\n  Option\n} = Select;\nconst WaterQualityReport = ({\n  year = '2021',\n  month = '04'\n}) => {\n  _s();\n  const [waterData, setWaterData] = useState(null);\n  const [waterAnalysis, setWaterAnalysis] = useState(null);\n  const [trendReport, setTrendReport] = useState(null);\n  const [anomalyReport, setAnomalyReport] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [stations, setStations] = useState([]);\n  const [selectedStation, setSelectedStation] = useState(null);\n  useEffect(() => {\n    // 获取可用的监测点列表\n    const fetchStations = async () => {\n      try {\n        const stationList = await getAvailableStations();\n        setStations(stationList);\n        if (stationList.length > 0 && !selectedStation) {\n          setSelectedStation(stationList[0]);\n        }\n      } catch (error) {\n        console.error('获取监测点列表失败:', error);\n      }\n    };\n    fetchStations();\n  }, []);\n  useEffect(() => {\n    const fetchData = async () => {\n      if (!selectedStation) return;\n      setLoading(true);\n      try {\n        // 加载水质数据\n        const {\n          province,\n          basin,\n          station\n        } = selectedStation;\n        const data = await loadStationWaterQualityData(province, basin, station, year, month);\n        setWaterData(data);\n\n        // 分析水质数据\n        if (data) {\n          const analysis = analyzeWaterQuality(data);\n          setWaterAnalysis(analysis);\n\n          // 生成趋势报告\n          const trends = generateWaterQualityTrendReport(data);\n          setTrendReport(trends);\n\n          // 生成异常报告\n          const anomalies = generateWaterQualityAnomalyReport(data);\n          setAnomalyReport(anomalies);\n        }\n      } catch (error) {\n        console.error('加载水质报告数据失败:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [year, month, selectedStation]);\n\n  // 处理监测点变化\n  const handleStationChange = value => {\n    const station = stations.find(s => `${s.province}-${s.basin}-${s.station}` === value);\n    setSelectedStation(station);\n  };\n\n  // 水质趋势图表配置\n  const getTrendChartOption = () => {\n    if (!waterData) return {};\n    return {\n      title: {\n        text: `${year}年${month}月水质参数趋势`\n      },\n      tooltip: {\n        trigger: 'axis'\n      },\n      legend: {\n        data: ['水温(°C)', 'pH值', '溶解氧(mg/L)', '浊度(NTU)', '高锰酸盐指数(mg/L)'],\n        type: 'scroll',\n        bottom: 10\n      },\n      grid: {\n        left: '3%',\n        right: '4%',\n        bottom: '15%',\n        containLabel: true\n      },\n      xAxis: {\n        type: 'category',\n        data: waterData.days\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: [{\n        name: '水温(°C)',\n        type: 'line',\n        data: waterData.temperature\n      }, {\n        name: 'pH值',\n        type: 'line',\n        data: waterData.ph\n      }, {\n        name: '溶解氧(mg/L)',\n        type: 'line',\n        data: waterData.oxygen\n      }, {\n        name: '浊度(NTU)',\n        type: 'line',\n        data: waterData.turbidity\n      }, {\n        name: '高锰酸盐指数(mg/L)',\n        type: 'line',\n        data: waterData.permanganate\n      }],\n      dataZoom: [{\n        type: 'inside',\n        start: 0,\n        end: 100\n      }, {\n        start: 0,\n        end: 100\n      }]\n    };\n  };\n\n  // 水质参数分布图表配置\n  const getParameterDistributionOption = () => {\n    if (!waterData) return {};\n\n    // 计算各参数的分布情况\n    const calculateDistribution = (data, ranges) => {\n      const distribution = ranges.map(range => ({\n        range: range.label,\n        count: 0\n      }));\n      data.forEach(value => {\n        for (let i = 0; i < ranges.length; i++) {\n          if (value >= ranges[i].min && value <= ranges[i].max) {\n            distribution[i].count++;\n            break;\n          }\n        }\n      });\n      return distribution;\n    };\n\n    // 定义pH值的范围\n    const phRanges = [{\n      min: 0,\n      max: 6.5,\n      label: '酸性 (<6.5)'\n    }, {\n      min: 6.5,\n      max: 7.5,\n      label: '中性 (6.5-7.5)'\n    }, {\n      min: 7.5,\n      max: 8.5,\n      label: '弱碱性 (7.5-8.5)'\n    }, {\n      min: 8.5,\n      max: 14,\n      label: '碱性 (>8.5)'\n    }];\n\n    // 定义溶解氧的范围\n    const oxygenRanges = [{\n      min: 0,\n      max: 3,\n      label: '严重缺氧 (<3)'\n    }, {\n      min: 3,\n      max: 5,\n      label: '轻度缺氧 (3-5)'\n    }, {\n      min: 5,\n      max: 7,\n      label: '良好 (5-7)'\n    }, {\n      min: 7,\n      max: 20,\n      label: '优秀 (>7)'\n    }];\n    const phDistribution = calculateDistribution(waterData.ph, phRanges);\n    const oxygenDistribution = calculateDistribution(waterData.oxygen, oxygenRanges);\n    return {\n      title: {\n        text: '水质参数分布'\n      },\n      tooltip: {\n        trigger: 'item'\n      },\n      legend: {\n        orient: 'vertical',\n        left: 'left',\n        top: 'center'\n      },\n      series: [{\n        name: 'pH值分布',\n        type: 'pie',\n        radius: ['40%', '70%'],\n        center: ['30%', '50%'],\n        label: {\n          formatter: '{b}: {c} ({d}%)'\n        },\n        data: phDistribution.map(item => ({\n          value: item.count,\n          name: item.range\n        }))\n      }, {\n        name: '溶解氧分布',\n        type: 'pie',\n        radius: ['40%', '70%'],\n        center: ['75%', '50%'],\n        label: {\n          formatter: '{b}: {c} ({d}%)'\n        },\n        data: oxygenDistribution.map(item => ({\n          value: item.count,\n          name: item.range\n        }))\n      }]\n    };\n  };\n\n  // 水质类别分布图表配置\n  const getWaterQualityCategoryOption = () => {\n    if (!waterData || !waterData.days) return {};\n\n    // 模拟水质类别数据（实际项目中应从API获取）\n    // 基于水质参数计算每天的水质类别\n    const calculateDailyWaterQuality = () => {\n      const categories = [];\n      const counts = {\n        'I': 0,\n        'II': 0,\n        'III': 0,\n        'IV': 0,\n        'V': 0,\n        '劣V': 0\n      };\n      for (let i = 0; i < waterData.days.length; i++) {\n        const ph = waterData.ph[i];\n        const oxygen = waterData.oxygen[i];\n        const permanganate = waterData.permanganate[i];\n        const ammonia = waterData.ammonia[i];\n        const phosphorus = waterData.phosphorus[i];\n        let category;\n        if (ph >= 6.5 && ph <= 8.5 && oxygen >= 6 && permanganate <= 4 && ammonia <= 0.5 && phosphorus <= 0.1) {\n          category = 'I';\n        } else if (ph >= 6 && ph <= 9 && oxygen >= 5 && permanganate <= 6 && ammonia <= 1.0 && phosphorus <= 0.2) {\n          category = 'II';\n        } else if (ph >= 6 && ph <= 9 && oxygen >= 4 && permanganate <= 8 && ammonia <= 1.5 && phosphorus <= 0.3) {\n          category = 'III';\n        } else if (ph >= 6 && ph <= 9 && oxygen >= 3 && permanganate <= 10 && ammonia <= 2.0 && phosphorus <= 0.4) {\n          category = 'IV';\n        } else if (ph >= 6 && ph <= 9 && oxygen >= 2 && permanganate <= 15 && ammonia <= 3.0 && phosphorus <= 0.5) {\n          category = 'V';\n        } else {\n          category = '劣V';\n        }\n        categories.push(category);\n        counts[category]++;\n      }\n      return {\n        categories,\n        counts\n      };\n    };\n    const {\n      categories,\n      counts\n    } = calculateDailyWaterQuality();\n    const categoryColors = {\n      'I': '#52c41a',\n      'II': '#91d5ff',\n      'III': '#fadb14',\n      'IV': '#fa8c16',\n      'V': '#f5222d',\n      '劣V': '#722ed1'\n    };\n    const categoryData = Object.keys(counts).map(key => ({\n      value: counts[key],\n      name: `${key}类`,\n      itemStyle: {\n        color: categoryColors[key]\n      }\n    }));\n    return {\n      title: {\n        text: '水质类别分布'\n      },\n      tooltip: {\n        trigger: 'item'\n      },\n      legend: {\n        orient: 'vertical',\n        left: 'left'\n      },\n      series: [{\n        name: '水质类别',\n        type: 'pie',\n        radius: '50%',\n        data: categoryData,\n        emphasis: {\n          itemStyle: {\n            shadowBlur: 10,\n            shadowOffsetX: 0,\n            shadowColor: 'rgba(0, 0, 0, 0.5)'\n          }\n        },\n        label: {\n          formatter: '{b}: {c} ({d}%)'\n        }\n      }]\n    };\n  };\n\n  // 异常数据表格列配置\n  const anomalyColumns = [{\n    title: '日期',\n    dataIndex: 'day',\n    key: 'day'\n  }, {\n    title: '参数',\n    dataIndex: 'parameter',\n    key: 'parameter'\n  }, {\n    title: '数值',\n    dataIndex: 'value',\n    key: 'value',\n    render: (text, record) => /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: record.severity === '过高' ? '#f5222d' : '#1890ff'\n      },\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }, this)\n  }, {\n    title: '正常范围',\n    dataIndex: 'normalRange',\n    key: 'normalRange'\n  }, {\n    title: '异常类型',\n    dataIndex: 'severity',\n    key: 'severity',\n    render: text => /*#__PURE__*/_jsxDEV(Tag, {\n      color: text === '过高' ? 'error' : 'blue',\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }, this)\n  }, {\n    title: '潜在影响',\n    dataIndex: 'impact',\n    key: 'impact'\n  }];\n\n  // 趋势报告表格列配置\n  const trendColumns = [{\n    title: '参数',\n    dataIndex: 'parameter',\n    key: 'parameter'\n  }, {\n    title: '趋势',\n    dataIndex: 'trend',\n    key: 'trend'\n  }, {\n    title: '变化强度',\n    dataIndex: 'strength',\n    key: 'strength',\n    render: text => {\n      let color = 'blue';\n      if (text === '显著') color = 'red';else if (text === '中等') color = 'orange';else if (text === '轻微') color = 'green';\n      return /*#__PURE__*/_jsxDEV(Tag, {\n        color: color,\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 16\n      }, this);\n    }\n  }, {\n    title: '建议措施',\n    dataIndex: 'suggestion',\n    key: 'suggestion'\n  }];\n\n  // 生成趋势报告数据\n  const getTrendReportData = () => {\n    if (!trendReport) return [];\n    const getSuggestion = (parameter, direction, strength) => {\n      if (strength === '几乎无变化') return '继续保持现有管理方式';\n      const suggestions = {\n        temperature: {\n          up: '注意控制水温，增加遮阳或水体循环',\n          down: '注意保持适宜水温，必要时增加加热设备'\n        },\n        ph: {\n          up: '监控pH值上升趋势，必要时添加调节剂',\n          down: '监控pH值下降趋势，必要时添加碱性物质'\n        },\n        oxygen: {\n          up: '良好趋势，继续保持',\n          down: '注意溶解氧下降趋势，增加增氧设备运行时间'\n        },\n        conductivity: {\n          up: '注意水体电导率上升，可能有污染物增加',\n          down: '监控电导率变化，保持水质稳定'\n        },\n        turbidity: {\n          up: '注意水体浊度上升，增加过滤或沉淀处理',\n          down: '良好趋势，继续保持'\n        },\n        permanganate: {\n          up: '注意有机物污染增加趋势，加强水处理',\n          down: '有机物污染减少，良好趋势'\n        },\n        ammonia: {\n          up: '氨氮上升趋势明显，增加换水频率或生物过滤',\n          down: '氨氮下降，良好趋势'\n        },\n        phosphorus: {\n          up: '总磷上升，注意控制饵料投放量',\n          down: '总磷下降，良好趋势'\n        },\n        nitrogen: {\n          up: '总氮上升，注意控制饵料投放量和排泄物处理',\n          down: '总氮下降，良好趋势'\n        }\n      };\n      return suggestions[parameter] ? suggestions[parameter][direction === '上升' ? 'up' : 'down'] : '保持监测，根据变化调整管理措施';\n    };\n    const parameterNames = {\n      temperature: '水温',\n      ph: 'pH值',\n      oxygen: '溶解氧',\n      conductivity: '电导率',\n      turbidity: '浊度',\n      permanganate: '高锰酸盐指数',\n      ammonia: '氨氮',\n      phosphorus: '总磷',\n      nitrogen: '总氮'\n    };\n    return Object.keys(trendReport).map(key => ({\n      key,\n      parameter: parameterNames[key],\n      trend: trendReport[key].direction,\n      strength: trendReport[key].strength,\n      suggestion: getSuggestion(key, trendReport[key].direction, trendReport[key].strength)\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"water-quality-report\",\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        marginBottom: 24\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography.Title, {\n          level: 5,\n          style: {\n            margin: 0\n          },\n          children: \"\\u9009\\u62E9\\u76D1\\u6D4B\\u70B9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          style: {\n            width: 300\n          },\n          placeholder: \"\\u8BF7\\u9009\\u62E9\\u76D1\\u6D4B\\u70B9\",\n          value: selectedStation ? `${selectedStation.province}-${selectedStation.basin}-${selectedStation.station}` : undefined,\n          onChange: handleStationChange,\n          children: stations.map(station => /*#__PURE__*/_jsxDEV(Option, {\n            value: `${station.province}-${station.basin}-${station.station}`,\n            children: [station.province, \" - \", station.basin, \" - \", station.station]\n          }, `${station.province}-${station.basin}-${station.station}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        padding: '50px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Spin, {\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: 16\n        },\n        children: \"\\u52A0\\u8F7D\\u6C34\\u8D28\\u6570\\u636E\\u4E2D...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Tabs, {\n      defaultActiveKey: \"overview\",\n      children: [/*#__PURE__*/_jsxDEV(TabPane, {\n        tab: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(LineChartOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 22\n          }, this), \"\\u6C34\\u8D28\\u6982\\u89C8\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 16\n        }, this),\n        children: [waterAnalysis && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            gutter: [24, 24],\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              span: 24,\n              children: /*#__PURE__*/_jsxDEV(Alert, {\n                message: `水质综合评价: ${waterAnalysis.qualityLevel.level}类 (${waterAnalysis.qualityLevel.description})`,\n                description: `根据《地表水环境质量标准(GB3838-2002)》评估，当前水质为${waterAnalysis.qualityLevel.level}类水质，${waterAnalysis.qualityLevel.description}。`,\n                type: waterAnalysis.qualityLevel.level === 'I' || waterAnalysis.qualityLevel.level === 'II' ? 'success' : waterAnalysis.qualityLevel.level === 'III' ? 'warning' : 'error',\n                showIcon: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            gutter: [24, 24],\n            style: {\n              marginTop: 24\n            },\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              span: 24,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                title: \"\\u6C34\\u8D28\\u53C2\\u6570\\u5E73\\u5747\\u503C\",\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  gutter: [24, 24],\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    span: 8,\n                    children: /*#__PURE__*/_jsxDEV(Statistic, {\n                      title: \"\\u6C34\\u6E29\",\n                      value: waterAnalysis.averages.temperature,\n                      suffix: \"\\xB0C\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 421,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 420,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    span: 8,\n                    children: /*#__PURE__*/_jsxDEV(Statistic, {\n                      title: \"pH\\u503C\",\n                      value: waterAnalysis.averages.ph\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 424,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    span: 8,\n                    children: /*#__PURE__*/_jsxDEV(Statistic, {\n                      title: \"\\u6EB6\\u89E3\\u6C27\",\n                      value: waterAnalysis.averages.oxygen,\n                      suffix: \"mg/L\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 427,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    span: 8,\n                    children: /*#__PURE__*/_jsxDEV(Statistic, {\n                      title: \"\\u7535\\u5BFC\\u7387\",\n                      value: waterAnalysis.averages.conductivity,\n                      suffix: \"\\u03BCS/cm\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 430,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 429,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    span: 8,\n                    children: /*#__PURE__*/_jsxDEV(Statistic, {\n                      title: \"\\u6D4A\\u5EA6\",\n                      value: waterAnalysis.averages.turbidity,\n                      suffix: \"NTU\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 433,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 432,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    span: 8,\n                    children: /*#__PURE__*/_jsxDEV(Statistic, {\n                      title: \"\\u9AD8\\u9530\\u9178\\u76D0\\u6307\\u6570\",\n                      value: waterAnalysis.averages.permanganate,\n                      suffix: \"mg/L\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 436,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 435,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    span: 8,\n                    children: /*#__PURE__*/_jsxDEV(Statistic, {\n                      title: \"\\u6C28\\u6C2E\",\n                      value: waterAnalysis.averages.ammonia,\n                      suffix: \"mg/L\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 439,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 438,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    span: 8,\n                    children: /*#__PURE__*/_jsxDEV(Statistic, {\n                      title: \"\\u603B\\u78F7\",\n                      value: waterAnalysis.averages.phosphorus,\n                      suffix: \"mg/L\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 442,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 441,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    span: 8,\n                    children: /*#__PURE__*/_jsxDEV(Statistic, {\n                      title: \"\\u603B\\u6C2E\",\n                      value: waterAnalysis.averages.nitrogen,\n                      suffix: \"mg/L\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 445,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 444,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 419,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            gutter: [24, 24],\n            style: {\n              marginTop: 24\n            },\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              span: 24,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                title: \"\\u8FBE\\u6807\\u7387\\u7EDF\\u8BA1\",\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  gutter: [24, 24],\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    span: 8,\n                    children: /*#__PURE__*/_jsxDEV(Statistic, {\n                      title: \"pH\\u503C\\u8FBE\\u6807\\u7387\",\n                      value: waterAnalysis.complianceRates.ph,\n                      valueStyle: {\n                        color: parseFloat(waterAnalysis.complianceRates.ph) >= 90 ? '#52c41a' : '#f5222d'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 457,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 456,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    span: 8,\n                    children: /*#__PURE__*/_jsxDEV(Statistic, {\n                      title: \"\\u6EB6\\u89E3\\u6C27\\u8FBE\\u6807\\u7387\",\n                      value: waterAnalysis.complianceRates.oxygen,\n                      valueStyle: {\n                        color: parseFloat(waterAnalysis.complianceRates.oxygen) >= 90 ? '#52c41a' : '#f5222d'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 464,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 463,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    span: 8,\n                    children: /*#__PURE__*/_jsxDEV(Statistic, {\n                      title: \"\\u9AD8\\u9530\\u9178\\u76D0\\u6307\\u6570\\u8FBE\\u6807\\u7387\",\n                      value: waterAnalysis.complianceRates.permanganate,\n                      valueStyle: {\n                        color: parseFloat(waterAnalysis.complianceRates.permanganate) >= 90 ? '#52c41a' : '#f5222d'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 471,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 470,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    span: 8,\n                    children: /*#__PURE__*/_jsxDEV(Statistic, {\n                      title: \"\\u6C28\\u6C2E\\u8FBE\\u6807\\u7387\",\n                      value: waterAnalysis.complianceRates.ammonia,\n                      valueStyle: {\n                        color: parseFloat(waterAnalysis.complianceRates.ammonia) >= 90 ? '#52c41a' : '#f5222d'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 478,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 477,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    span: 8,\n                    children: /*#__PURE__*/_jsxDEV(Statistic, {\n                      title: \"\\u603B\\u78F7\\u8FBE\\u6807\\u7387\",\n                      value: waterAnalysis.complianceRates.phosphorus,\n                      valueStyle: {\n                        color: parseFloat(waterAnalysis.complianceRates.phosphorus) >= 90 ? '#52c41a' : '#f5222d'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 485,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 484,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), waterData && /*#__PURE__*/_jsxDEV(Row, {\n          gutter: [24, 24],\n          style: {\n            marginTop: 24\n          },\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            span: 24,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(ReactECharts, {\n                option: getTrendChartOption(),\n                style: {\n                  height: 400\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 502,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 13\n        }, this)]\n      }, \"overview\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n        tab: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(BarChartOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 22\n          }, this), \"\\u6C34\\u8D28\\u5206\\u5E03\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 16\n        }, this),\n        children: waterData && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            gutter: [24, 24],\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              span: 24,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: /*#__PURE__*/_jsxDEV(ReactECharts, {\n                  option: getParameterDistributionOption(),\n                  style: {\n                    height: 400\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            gutter: [24, 24],\n            style: {\n              marginTop: 24\n            },\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              span: 24,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: /*#__PURE__*/_jsxDEV(ReactECharts, {\n                  option: getWaterQualityCategoryOption(),\n                  style: {\n                    height: 400\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 526,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, \"distribution\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n        tab: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(WarningOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 535,\n            columnNumber: 22\n          }, this), \"\\u5F02\\u5E38\\u5206\\u6790\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 16\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          gutter: [24, 24],\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            span: 24,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              title: `异常数据分析 (共${anomalyReport.length}条)`,\n              children: anomalyReport.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n                columns: anomalyColumns,\n                dataSource: anomalyReport.map((item, index) => ({\n                  ...item,\n                  key: index\n                })),\n                pagination: {\n                  pageSize: 10\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: 'center',\n                  padding: '20px 0'\n                },\n                children: [/*#__PURE__*/_jsxDEV(CheckCircleOutlined, {\n                  style: {\n                    fontSize: 48,\n                    color: '#52c41a'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 549,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    marginTop: 16\n                  },\n                  children: \"\\u672A\\u68C0\\u6D4B\\u5230\\u5F02\\u5E38\\u6570\\u636E\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 550,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this), trendReport && /*#__PURE__*/_jsxDEV(Row, {\n          gutter: [24, 24],\n          style: {\n            marginTop: 24\n          },\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            span: 24,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              title: \"\\u6C34\\u8D28\\u8D8B\\u52BF\\u5206\\u6790\",\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                columns: trendColumns,\n                dataSource: getTrendReportData(),\n                pagination: false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 13\n        }, this)]\n      }, \"anomaly\", true, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPane, {\n        tab: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(CheckCircleOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 22\n          }, this), \"\\u7EFC\\u5408\\u8BC4\\u4F30\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 16\n        }, this),\n        children: waterAnalysis && trendReport && /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              level: 4,\n              children: \"\\u6C34\\u8D28\\u7EFC\\u5408\\u8BC4\\u4F30\\u62A5\\u544A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                strong: true,\n                children: \"\\u76D1\\u6D4B\\u65F6\\u95F4\\uFF1A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 19\n              }, this), \" \", year, \"\\u5E74\", month, \"\\u6708\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                strong: true,\n                children: \"\\u6C34\\u8D28\\u7B49\\u7EA7\\uFF1A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Tag, {\n                color: waterAnalysis.qualityLevel.color,\n                children: [waterAnalysis.qualityLevel.level, \"\\u7C7B (\", waterAnalysis.qualityLevel.description, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                strong: true,\n                children: \"\\u6C34\\u8D28\\u72B6\\u51B5\\u6982\\u8FF0\\uFF1A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 593,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n              children: [\"\\u6839\\u636E\\u300A\\u5730\\u8868\\u6C34\\u73AF\\u5883\\u8D28\\u91CF\\u6807\\u51C6(GB3838-2002)\\u300B\\u8BC4\\u4F30\\uFF0C\\u672C\\u6708\\u6C34\\u8D28\\u6574\\u4F53\\u4E3A\", /*#__PURE__*/_jsxDEV(Tag, {\n                color: waterAnalysis.qualityLevel.color,\n                children: [waterAnalysis.qualityLevel.level, \"\\u7C7B\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 19\n              }, this), \"\\u6C34\\u8D28\\uFF0C\", waterAnalysis.qualityLevel.description, \"\\u3002 \\u4E3B\\u8981\\u6C34\\u8D28\\u53C2\\u6570\\u5E73\\u5747\\u503C\\uFF1ApH\\u503C\", waterAnalysis.averages.ph, \"\\uFF0C \\u6EB6\\u89E3\\u6C27\", waterAnalysis.averages.oxygen, \"mg/L\\uFF0C \\u9AD8\\u9530\\u9178\\u76D0\\u6307\\u6570\", waterAnalysis.averages.permanganate, \"mg/L\\uFF0C \\u6C28\\u6C2E\", waterAnalysis.averages.ammonia, \"mg/L\\uFF0C \\u603B\\u78F7\", waterAnalysis.averages.phosphorus, \"mg/L\\u3002\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                strong: true,\n                children: \"\\u6C34\\u8D28\\u8D8B\\u52BF\\u5206\\u6790\\uFF1A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: Object.keys(trendReport).map(key => {\n                  const paramNames = {\n                    temperature: '水温',\n                    ph: 'pH值',\n                    oxygen: '溶解氧',\n                    conductivity: '电导率',\n                    turbidity: '浊度',\n                    permanganate: '高锰酸盐指数',\n                    ammonia: '氨氮',\n                    phosphorus: '总磷',\n                    nitrogen: '总氮'\n                  };\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [paramNames[key], \"\\uFF1A\", trendReport[key].description, \"\\u8D8B\\u52BF\", trendReport[key].strength !== '几乎无变化' && trendReport[key].direction === '上升' && key !== 'oxygen' ? '，需关注' : '']\n                  }, key, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 628,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 613,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                strong: true,\n                children: \"\\u5F02\\u5E38\\u60C5\\u51B5\\uFF1A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 639,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n              children: [\"\\u672C\\u6708\\u5171\\u68C0\\u6D4B\\u5230 \", anomalyReport.length, \" \\u6761\\u5F02\\u5E38\\u6570\\u636E\\u3002\", anomalyReport.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: Array.from(new Set(anomalyReport.map(item => item.parameter))).map(param => {\n                  const count = anomalyReport.filter(item => item.parameter === param).length;\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [param, \"\\u5F02\\u5E38\\uFF1A\", count, \"\\u6B21\"]\n                  }, param, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 648,\n                    columnNumber: 32\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 645,\n                columnNumber: 21\n              }, this) : '水质参数均在正常范围内。']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 642,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n              children: /*#__PURE__*/_jsxDEV(Text, {\n                strong: true,\n                children: \"\\u5EFA\\u8BAE\\u63AA\\u65BD\\uFF1A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 655,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [getTrendReportData().filter(item => item.strength !== '几乎无变化').map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: item.suggestion\n                }, item.key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 663,\n                  columnNumber: 25\n                }, this)), anomalyReport.length > 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"\\u52A0\\u5F3A\\u65E5\\u5E38\\u76D1\\u6D4B\\uFF0C\\u7279\\u522B\\u5173\\u6CE8\\u5F02\\u5E38\\u53C2\\u6570\\u7684\\u53D8\\u5316\\u8D8B\\u52BF\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 666,\n                  columnNumber: 23\n                }, this), waterAnalysis.qualityLevel.level === 'I' || waterAnalysis.qualityLevel.level === 'II' ? /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"\\u7EE7\\u7EED\\u4FDD\\u6301\\u73B0\\u6709\\u6C34\\u8D28\\u7BA1\\u7406\\u63AA\\u65BD\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 669,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: \"\\u52A0\\u5F3A\\u6C34\\u8D28\\u7BA1\\u7406\\uFF0C\\u63D0\\u9AD8\\u6C34\\u8D28\\u7B49\\u7EA7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 671,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 13\n        }, this)\n      }, \"assessment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 372,\n    columnNumber: 5\n  }, this);\n};\n_s(WaterQualityReport, \"/66abdIhlzcP3hq3K6+OrOAvmkU=\");\n_c = WaterQualityReport;\nexport default WaterQualityReport;\nvar _c;\n$RefreshReg$(_c, \"WaterQualityReport\");","map":{"version":3,"names":["React","useState","useEffect","Card","Row","Col","Table","Tabs","Statistic","Alert","List","Tag","Divider","Typography","Select","Spin","LineChartOutlined","BarChartOutlined","WarningOutlined","CheckCircleOutlined","ReactECharts","analyzeWaterQuality","generateWaterQualityTrendReport","generateWaterQualityAnomalyReport","loadStationWaterQualityData","getAvailableStations","jsxDEV","_jsxDEV","Fragment","_Fragment","TabPane","Title","Paragraph","Text","Option","WaterQualityReport","year","month","_s","waterData","setWaterData","waterAnalysis","setWaterAnalysis","trendReport","setTrendReport","anomalyReport","setAnomalyReport","loading","setLoading","stations","setStations","selectedStation","setSelectedStation","fetchStations","stationList","length","error","console","fetchData","province","basin","station","data","analysis","trends","anomalies","handleStationChange","value","find","s","getTrendChartOption","title","text","tooltip","trigger","legend","type","bottom","grid","left","right","containLabel","xAxis","days","yAxis","series","name","temperature","ph","oxygen","turbidity","permanganate","dataZoom","start","end","getParameterDistributionOption","calculateDistribution","ranges","distribution","map","range","label","count","forEach","i","min","max","phRanges","oxygenRanges","phDistribution","oxygenDistribution","orient","top","radius","center","formatter","item","getWaterQualityCategoryOption","calculateDailyWaterQuality","categories","counts","ammonia","phosphorus","category","push","categoryColors","categoryData","Object","keys","key","itemStyle","color","emphasis","shadowBlur","shadowOffsetX","shadowColor","anomalyColumns","dataIndex","render","record","style","severity","children","fileName","_jsxFileName","lineNumber","columnNumber","trendColumns","getTrendReportData","getSuggestion","parameter","direction","strength","suggestions","up","down","conductivity","nitrogen","parameterNames","trend","suggestion","className","marginBottom","display","justifyContent","alignItems","level","margin","width","placeholder","undefined","onChange","textAlign","padding","size","marginTop","defaultActiveKey","tab","gutter","span","message","qualityLevel","description","showIcon","averages","suffix","complianceRates","valueStyle","parseFloat","option","height","columns","dataSource","index","pagination","pageSize","fontSize","strong","paramNames","Array","from","Set","param","filter","_c","$RefreshReg$"],"sources":["D:/文雅竹/作业/大三下/软件工程/NKU_Software/frontend/src/components/WaterQualityReport/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, Row, Col, Table, Tabs, Statistic, Alert, List, Tag, Divider, Typography, Select, Spin } from 'antd';\nimport { LineChartOutlined, BarChartOutlined, WarningOutlined, CheckCircleOutlined } from '@ant-design/icons';\nimport ReactECharts from 'echarts-for-react';\nimport { analyzeWaterQuality, generateWaterQualityTrendReport, generateWaterQualityAnomalyReport } from '../../services/dataService';\nimport { loadStationWaterQualityData, getAvailableStations } from '../../services/waterQualityService';\n\nconst { TabPane } = Tabs;\nconst { Title, Paragraph, Text } = Typography;\nconst { Option } = Select;\n\nconst WaterQualityReport = ({ year = '2021', month = '04' }) => {\n  const [waterData, setWaterData] = useState(null);\n  const [waterAnalysis, setWaterAnalysis] = useState(null);\n  const [trendReport, setTrendReport] = useState(null);\n  const [anomalyReport, setAnomalyReport] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [stations, setStations] = useState([]);\n  const [selectedStation, setSelectedStation] = useState(null);\n\n  useEffect(() => {\n    // 获取可用的监测点列表\n    const fetchStations = async () => {\n      try {\n        const stationList = await getAvailableStations();\n        setStations(stationList);\n        if (stationList.length > 0 && !selectedStation) {\n          setSelectedStation(stationList[0]);\n        }\n      } catch (error) {\n        console.error('获取监测点列表失败:', error);\n      }\n    };\n    \n    fetchStations();\n  }, []);\n  \n  useEffect(() => {\n    const fetchData = async () => {\n      if (!selectedStation) return;\n      \n      setLoading(true);\n      try {\n        // 加载水质数据\n        const { province, basin, station } = selectedStation;\n        const data = await loadStationWaterQualityData(province, basin, station, year, month);\n        setWaterData(data);\n        \n        // 分析水质数据\n        if (data) {\n          const analysis = analyzeWaterQuality(data);\n          setWaterAnalysis(analysis);\n          \n          // 生成趋势报告\n          const trends = generateWaterQualityTrendReport(data);\n          setTrendReport(trends);\n          \n          // 生成异常报告\n          const anomalies = generateWaterQualityAnomalyReport(data);\n          setAnomalyReport(anomalies);\n        }\n      } catch (error) {\n        console.error('加载水质报告数据失败:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchData();\n  }, [year, month, selectedStation]);\n  \n  // 处理监测点变化\n  const handleStationChange = (value) => {\n    const station = stations.find(s => `${s.province}-${s.basin}-${s.station}` === value);\n    setSelectedStation(station);\n  };\n\n  // 水质趋势图表配置\n  const getTrendChartOption = () => {\n    if (!waterData) return {};\n    \n    return {\n      title: { text: `${year}年${month}月水质参数趋势` },\n      tooltip: { trigger: 'axis' },\n      legend: { \n        data: ['水温(°C)', 'pH值', '溶解氧(mg/L)', '浊度(NTU)', '高锰酸盐指数(mg/L)'],\n        type: 'scroll',\n        bottom: 10\n      },\n      grid: { left: '3%', right: '4%', bottom: '15%', containLabel: true },\n      xAxis: { type: 'category', data: waterData.days },\n      yAxis: { type: 'value' },\n      series: [\n        { name: '水温(°C)', type: 'line', data: waterData.temperature },\n        { name: 'pH值', type: 'line', data: waterData.ph },\n        { name: '溶解氧(mg/L)', type: 'line', data: waterData.oxygen },\n        { name: '浊度(NTU)', type: 'line', data: waterData.turbidity },\n        { name: '高锰酸盐指数(mg/L)', type: 'line', data: waterData.permanganate }\n      ],\n      dataZoom: [{ type: 'inside', start: 0, end: 100 }, { start: 0, end: 100 }]\n    };\n  };\n\n  // 水质参数分布图表配置\n  const getParameterDistributionOption = () => {\n    if (!waterData) return {};\n    \n    // 计算各参数的分布情况\n    const calculateDistribution = (data, ranges) => {\n      const distribution = ranges.map(range => ({ range: range.label, count: 0 }));\n      \n      data.forEach(value => {\n        for (let i = 0; i < ranges.length; i++) {\n          if (value >= ranges[i].min && value <= ranges[i].max) {\n            distribution[i].count++;\n            break;\n          }\n        }\n      });\n      \n      return distribution;\n    };\n    \n    // 定义pH值的范围\n    const phRanges = [\n      { min: 0, max: 6.5, label: '酸性 (<6.5)' },\n      { min: 6.5, max: 7.5, label: '中性 (6.5-7.5)' },\n      { min: 7.5, max: 8.5, label: '弱碱性 (7.5-8.5)' },\n      { min: 8.5, max: 14, label: '碱性 (>8.5)' }\n    ];\n    \n    // 定义溶解氧的范围\n    const oxygenRanges = [\n      { min: 0, max: 3, label: '严重缺氧 (<3)' },\n      { min: 3, max: 5, label: '轻度缺氧 (3-5)' },\n      { min: 5, max: 7, label: '良好 (5-7)' },\n      { min: 7, max: 20, label: '优秀 (>7)' }\n    ];\n    \n    const phDistribution = calculateDistribution(waterData.ph, phRanges);\n    const oxygenDistribution = calculateDistribution(waterData.oxygen, oxygenRanges);\n    \n    return {\n      title: { text: '水质参数分布' },\n      tooltip: { trigger: 'item' },\n      legend: { orient: 'vertical', left: 'left', top: 'center' },\n      series: [\n        {\n          name: 'pH值分布',\n          type: 'pie',\n          radius: ['40%', '70%'],\n          center: ['30%', '50%'],\n          label: { formatter: '{b}: {c} ({d}%)' },\n          data: phDistribution.map(item => ({\n            value: item.count,\n            name: item.range\n          }))\n        },\n        {\n          name: '溶解氧分布',\n          type: 'pie',\n          radius: ['40%', '70%'],\n          center: ['75%', '50%'],\n          label: { formatter: '{b}: {c} ({d}%)' },\n          data: oxygenDistribution.map(item => ({\n            value: item.count,\n            name: item.range\n          }))\n        }\n      ]\n    };\n  };\n\n  // 水质类别分布图表配置\n  const getWaterQualityCategoryOption = () => {\n    if (!waterData || !waterData.days) return {};\n    \n    // 模拟水质类别数据（实际项目中应从API获取）\n    // 基于水质参数计算每天的水质类别\n    const calculateDailyWaterQuality = () => {\n      const categories = [];\n      const counts = { 'I': 0, 'II': 0, 'III': 0, 'IV': 0, 'V': 0, '劣V': 0 };\n      \n      for (let i = 0; i < waterData.days.length; i++) {\n        const ph = waterData.ph[i];\n        const oxygen = waterData.oxygen[i];\n        const permanganate = waterData.permanganate[i];\n        const ammonia = waterData.ammonia[i];\n        const phosphorus = waterData.phosphorus[i];\n        \n        let category;\n        \n        if (ph >= 6.5 && ph <= 8.5 && oxygen >= 6 && permanganate <= 4 && ammonia <= 0.5 && phosphorus <= 0.1) {\n          category = 'I';\n        } else if (ph >= 6 && ph <= 9 && oxygen >= 5 && permanganate <= 6 && ammonia <= 1.0 && phosphorus <= 0.2) {\n          category = 'II';\n        } else if (ph >= 6 && ph <= 9 && oxygen >= 4 && permanganate <= 8 && ammonia <= 1.5 && phosphorus <= 0.3) {\n          category = 'III';\n        } else if (ph >= 6 && ph <= 9 && oxygen >= 3 && permanganate <= 10 && ammonia <= 2.0 && phosphorus <= 0.4) {\n          category = 'IV';\n        } else if (ph >= 6 && ph <= 9 && oxygen >= 2 && permanganate <= 15 && ammonia <= 3.0 && phosphorus <= 0.5) {\n          category = 'V';\n        } else {\n          category = '劣V';\n        }\n        \n        categories.push(category);\n        counts[category]++;\n      }\n      \n      return { categories, counts };\n    };\n    \n    const { categories, counts } = calculateDailyWaterQuality();\n    \n    const categoryColors = {\n      'I': '#52c41a',\n      'II': '#91d5ff',\n      'III': '#fadb14',\n      'IV': '#fa8c16',\n      'V': '#f5222d',\n      '劣V': '#722ed1'\n    };\n    \n    const categoryData = Object.keys(counts).map(key => ({\n      value: counts[key],\n      name: `${key}类`,\n      itemStyle: { color: categoryColors[key] }\n    }));\n    \n    return {\n      title: { text: '水质类别分布' },\n      tooltip: { trigger: 'item' },\n      legend: { orient: 'vertical', left: 'left' },\n      series: [\n        {\n          name: '水质类别',\n          type: 'pie',\n          radius: '50%',\n          data: categoryData,\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\n            }\n          },\n          label: { formatter: '{b}: {c} ({d}%)' }\n        }\n      ]\n    };\n  };\n\n  // 异常数据表格列配置\n  const anomalyColumns = [\n    { title: '日期', dataIndex: 'day', key: 'day' },\n    { title: '参数', dataIndex: 'parameter', key: 'parameter' },\n    { \n      title: '数值', \n      dataIndex: 'value', \n      key: 'value',\n      render: (text, record) => (\n        <span style={{ color: record.severity === '过高' ? '#f5222d' : '#1890ff' }}>\n          {text}\n        </span>\n      )\n    },\n    { title: '正常范围', dataIndex: 'normalRange', key: 'normalRange' },\n    { \n      title: '异常类型', \n      dataIndex: 'severity', \n      key: 'severity',\n      render: text => (\n        <Tag color={text === '过高' ? 'error' : 'blue'}>{text}</Tag>\n      )\n    },\n    { title: '潜在影响', dataIndex: 'impact', key: 'impact' }\n  ];\n\n  // 趋势报告表格列配置\n  const trendColumns = [\n    { title: '参数', dataIndex: 'parameter', key: 'parameter' },\n    { title: '趋势', dataIndex: 'trend', key: 'trend' },\n    { \n      title: '变化强度', \n      dataIndex: 'strength', \n      key: 'strength',\n      render: (text) => {\n        let color = 'blue';\n        if (text === '显著') color = 'red';\n        else if (text === '中等') color = 'orange';\n        else if (text === '轻微') color = 'green';\n        return <Tag color={color}>{text}</Tag>;\n      }\n    },\n    { title: '建议措施', dataIndex: 'suggestion', key: 'suggestion' }\n  ];\n\n  // 生成趋势报告数据\n  const getTrendReportData = () => {\n    if (!trendReport) return [];\n    \n    const getSuggestion = (parameter, direction, strength) => {\n      if (strength === '几乎无变化') return '继续保持现有管理方式';\n      \n      const suggestions = {\n        temperature: {\n          up: '注意控制水温，增加遮阳或水体循环',\n          down: '注意保持适宜水温，必要时增加加热设备'\n        },\n        ph: {\n          up: '监控pH值上升趋势，必要时添加调节剂',\n          down: '监控pH值下降趋势，必要时添加碱性物质'\n        },\n        oxygen: {\n          up: '良好趋势，继续保持',\n          down: '注意溶解氧下降趋势，增加增氧设备运行时间'\n        },\n        conductivity: {\n          up: '注意水体电导率上升，可能有污染物增加',\n          down: '监控电导率变化，保持水质稳定'\n        },\n        turbidity: {\n          up: '注意水体浊度上升，增加过滤或沉淀处理',\n          down: '良好趋势，继续保持'\n        },\n        permanganate: {\n          up: '注意有机物污染增加趋势，加强水处理',\n          down: '有机物污染减少，良好趋势'\n        },\n        ammonia: {\n          up: '氨氮上升趋势明显，增加换水频率或生物过滤',\n          down: '氨氮下降，良好趋势'\n        },\n        phosphorus: {\n          up: '总磷上升，注意控制饵料投放量',\n          down: '总磷下降，良好趋势'\n        },\n        nitrogen: {\n          up: '总氮上升，注意控制饵料投放量和排泄物处理',\n          down: '总氮下降，良好趋势'\n        }\n      };\n      \n      return suggestions[parameter] ? \n        suggestions[parameter][direction === '上升' ? 'up' : 'down'] : \n        '保持监测，根据变化调整管理措施';\n    };\n    \n    const parameterNames = {\n      temperature: '水温',\n      ph: 'pH值',\n      oxygen: '溶解氧',\n      conductivity: '电导率',\n      turbidity: '浊度',\n      permanganate: '高锰酸盐指数',\n      ammonia: '氨氮',\n      phosphorus: '总磷',\n      nitrogen: '总氮'\n    };\n    \n    return Object.keys(trendReport).map(key => ({\n      key,\n      parameter: parameterNames[key],\n      trend: trendReport[key].direction,\n      strength: trendReport[key].strength,\n      suggestion: getSuggestion(key, trendReport[key].direction, trendReport[key].strength)\n    }));\n  };\n\n  return (\n    <div className=\"water-quality-report\">\n      <Card style={{ marginBottom: 24 }}>\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          <Typography.Title level={5} style={{ margin: 0 }}>选择监测点</Typography.Title>\n          <Select\n            style={{ width: 300 }}\n            placeholder=\"请选择监测点\"\n            value={selectedStation ? `${selectedStation.province}-${selectedStation.basin}-${selectedStation.station}` : undefined}\n            onChange={handleStationChange}\n          >\n            {stations.map(station => (\n              <Option key={`${station.province}-${station.basin}-${station.station}`} value={`${station.province}-${station.basin}-${station.station}`}>\n                {station.province} - {station.basin} - {station.station}\n              </Option>\n            ))}\n          </Select>\n        </div>\n      </Card>\n      \n      {loading ? (\n        <div style={{ textAlign: 'center', padding: '50px 0' }}>\n          <Spin size=\"large\" />\n          <p style={{ marginTop: 16 }}>加载水质数据中...</p>\n        </div>\n      ) : (\n        <Tabs defaultActiveKey=\"overview\">\n        <TabPane\n          tab={<span><LineChartOutlined />水质概览</span>}\n          key=\"overview\"\n        >\n          {waterAnalysis && (\n            <>\n              <Row gutter={[24, 24]}>\n                <Col span={24}>\n                  <Alert\n                    message={`水质综合评价: ${waterAnalysis.qualityLevel.level}类 (${waterAnalysis.qualityLevel.description})`}\n                    description={`根据《地表水环境质量标准(GB3838-2002)》评估，当前水质为${waterAnalysis.qualityLevel.level}类水质，${waterAnalysis.qualityLevel.description}。`}\n                    type={waterAnalysis.qualityLevel.level === 'I' || waterAnalysis.qualityLevel.level === 'II' ? 'success' : \n                          waterAnalysis.qualityLevel.level === 'III' ? 'warning' : 'error'}\n                    showIcon\n                  />\n                </Col>\n              </Row>\n              \n              <Row gutter={[24, 24]} style={{ marginTop: 24 }}>\n                <Col span={24}>\n                  <Card title=\"水质参数平均值\">\n                    <Row gutter={[24, 24]}>\n                      <Col span={8}>\n                        <Statistic title=\"水温\" value={waterAnalysis.averages.temperature} suffix=\"°C\" />\n                      </Col>\n                      <Col span={8}>\n                        <Statistic title=\"pH值\" value={waterAnalysis.averages.ph} />\n                      </Col>\n                      <Col span={8}>\n                        <Statistic title=\"溶解氧\" value={waterAnalysis.averages.oxygen} suffix=\"mg/L\" />\n                      </Col>\n                      <Col span={8}>\n                        <Statistic title=\"电导率\" value={waterAnalysis.averages.conductivity} suffix=\"μS/cm\" />\n                      </Col>\n                      <Col span={8}>\n                        <Statistic title=\"浊度\" value={waterAnalysis.averages.turbidity} suffix=\"NTU\" />\n                      </Col>\n                      <Col span={8}>\n                        <Statistic title=\"高锰酸盐指数\" value={waterAnalysis.averages.permanganate} suffix=\"mg/L\" />\n                      </Col>\n                      <Col span={8}>\n                        <Statistic title=\"氨氮\" value={waterAnalysis.averages.ammonia} suffix=\"mg/L\" />\n                      </Col>\n                      <Col span={8}>\n                        <Statistic title=\"总磷\" value={waterAnalysis.averages.phosphorus} suffix=\"mg/L\" />\n                      </Col>\n                      <Col span={8}>\n                        <Statistic title=\"总氮\" value={waterAnalysis.averages.nitrogen} suffix=\"mg/L\" />\n                      </Col>\n                    </Row>\n                  </Card>\n                </Col>\n              </Row>\n              \n              <Row gutter={[24, 24]} style={{ marginTop: 24 }}>\n                <Col span={24}>\n                  <Card title=\"达标率统计\">\n                    <Row gutter={[24, 24]}>\n                      <Col span={8}>\n                        <Statistic \n                          title=\"pH值达标率\" \n                          value={waterAnalysis.complianceRates.ph} \n                          valueStyle={{ color: parseFloat(waterAnalysis.complianceRates.ph) >= 90 ? '#52c41a' : '#f5222d' }}\n                        />\n                      </Col>\n                      <Col span={8}>\n                        <Statistic \n                          title=\"溶解氧达标率\" \n                          value={waterAnalysis.complianceRates.oxygen}\n                          valueStyle={{ color: parseFloat(waterAnalysis.complianceRates.oxygen) >= 90 ? '#52c41a' : '#f5222d' }}\n                        />\n                      </Col>\n                      <Col span={8}>\n                        <Statistic \n                          title=\"高锰酸盐指数达标率\" \n                          value={waterAnalysis.complianceRates.permanganate}\n                          valueStyle={{ color: parseFloat(waterAnalysis.complianceRates.permanganate) >= 90 ? '#52c41a' : '#f5222d' }}\n                        />\n                      </Col>\n                      <Col span={8}>\n                        <Statistic \n                          title=\"氨氮达标率\" \n                          value={waterAnalysis.complianceRates.ammonia}\n                          valueStyle={{ color: parseFloat(waterAnalysis.complianceRates.ammonia) >= 90 ? '#52c41a' : '#f5222d' }}\n                        />\n                      </Col>\n                      <Col span={8}>\n                        <Statistic \n                          title=\"总磷达标率\" \n                          value={waterAnalysis.complianceRates.phosphorus}\n                          valueStyle={{ color: parseFloat(waterAnalysis.complianceRates.phosphorus) >= 90 ? '#52c41a' : '#f5222d' }}\n                        />\n                      </Col>\n                    </Row>\n                  </Card>\n                </Col>\n              </Row>\n            </>\n          )}\n          \n          {waterData && (\n            <Row gutter={[24, 24]} style={{ marginTop: 24 }}>\n              <Col span={24}>\n                <Card>\n                  <ReactECharts option={getTrendChartOption()} style={{ height: 400 }} />\n                </Card>\n              </Col>\n            </Row>\n          )}\n        </TabPane>\n        \n        <TabPane\n          tab={<span><BarChartOutlined />水质分布</span>}\n          key=\"distribution\"\n        >\n          {waterData && (\n            <>\n              <Row gutter={[24, 24]}>\n                <Col span={24}>\n                  <Card>\n                    <ReactECharts option={getParameterDistributionOption()} style={{ height: 400 }} />\n                  </Card>\n                </Col>\n              </Row>\n              \n              <Row gutter={[24, 24]} style={{ marginTop: 24 }}>\n                <Col span={24}>\n                  <Card>\n                    <ReactECharts option={getWaterQualityCategoryOption()} style={{ height: 400 }} />\n                  </Card>\n                </Col>\n              </Row>\n            </>\n          )}\n        </TabPane>\n        \n        <TabPane\n          tab={<span><WarningOutlined />异常分析</span>}\n          key=\"anomaly\"\n        >\n          <Row gutter={[24, 24]}>\n            <Col span={24}>\n              <Card title={`异常数据分析 (共${anomalyReport.length}条)`}>\n                {anomalyReport.length > 0 ? (\n                  <Table \n                    columns={anomalyColumns} \n                    dataSource={anomalyReport.map((item, index) => ({ ...item, key: index }))} \n                    pagination={{ pageSize: 10 }}\n                  />\n                ) : (\n                  <div style={{ textAlign: 'center', padding: '20px 0' }}>\n                    <CheckCircleOutlined style={{ fontSize: 48, color: '#52c41a' }} />\n                    <p style={{ marginTop: 16 }}>未检测到异常数据</p>\n                  </div>\n                )}\n              </Card>\n            </Col>\n          </Row>\n          \n          {trendReport && (\n            <Row gutter={[24, 24]} style={{ marginTop: 24 }}>\n              <Col span={24}>\n                <Card title=\"水质趋势分析\">\n                  <Table \n                    columns={trendColumns} \n                    dataSource={getTrendReportData()} \n                    pagination={false}\n                  />\n                </Card>\n              </Col>\n            </Row>\n          )}\n        </TabPane>\n        \n        <TabPane\n          tab={<span><CheckCircleOutlined />综合评估</span>}\n          key=\"assessment\"\n        >\n          {waterAnalysis && trendReport && (\n            <Card>\n              <Typography>\n                <Title level={4}>水质综合评估报告</Title>\n                <Divider />\n                \n                <Paragraph>\n                  <Text strong>监测时间：</Text> {year}年{month}月\n                </Paragraph>\n                \n                <Paragraph>\n                  <Text strong>水质等级：</Text> \n                  <Tag color={waterAnalysis.qualityLevel.color}>\n                    {waterAnalysis.qualityLevel.level}类 ({waterAnalysis.qualityLevel.description})\n                  </Tag>\n                </Paragraph>\n                \n                <Paragraph>\n                  <Text strong>水质状况概述：</Text>\n                </Paragraph>\n                \n                <Paragraph>\n                  根据《地表水环境质量标准(GB3838-2002)》评估，本月水质整体为\n                  <Tag color={waterAnalysis.qualityLevel.color}>{waterAnalysis.qualityLevel.level}类</Tag>\n                  水质，{waterAnalysis.qualityLevel.description}。\n                  主要水质参数平均值：pH值{waterAnalysis.averages.ph}，\n                  溶解氧{waterAnalysis.averages.oxygen}mg/L，\n                  高锰酸盐指数{waterAnalysis.averages.permanganate}mg/L，\n                  氨氮{waterAnalysis.averages.ammonia}mg/L，\n                  总磷{waterAnalysis.averages.phosphorus}mg/L。\n                </Paragraph>\n                \n                <Paragraph>\n                  <Text strong>水质趋势分析：</Text>\n                </Paragraph>\n                \n                <Paragraph>\n                  <ul>\n                    {Object.keys(trendReport).map(key => {\n                      const paramNames = {\n                        temperature: '水温',\n                        ph: 'pH值',\n                        oxygen: '溶解氧',\n                        conductivity: '电导率',\n                        turbidity: '浊度',\n                        permanganate: '高锰酸盐指数',\n                        ammonia: '氨氮',\n                        phosphorus: '总磷',\n                        nitrogen: '总氮'\n                      };\n                      \n                      return (\n                        <li key={key}>\n                          {paramNames[key]}：{trendReport[key].description}趋势\n                          {trendReport[key].strength !== '几乎无变化' && trendReport[key].direction === '上升' && key !== 'oxygen' ? \n                            '，需关注' : ''}\n                        </li>\n                      );\n                    })}\n                  </ul>\n                </Paragraph>\n                \n                <Paragraph>\n                  <Text strong>异常情况：</Text>\n                </Paragraph>\n                \n                <Paragraph>\n                  本月共检测到 {anomalyReport.length} 条异常数据。\n                  {anomalyReport.length > 0 ? (\n                    <ul>\n                      {Array.from(new Set(anomalyReport.map(item => item.parameter))).map(param => {\n                        const count = anomalyReport.filter(item => item.parameter === param).length;\n                        return <li key={param}>{param}异常：{count}次</li>;\n                      })}\n                    </ul>\n                  ) : '水质参数均在正常范围内。'}\n                </Paragraph>\n                \n                <Paragraph>\n                  <Text strong>建议措施：</Text>\n                </Paragraph>\n                \n                <Paragraph>\n                  <ul>\n                    {getTrendReportData()\n                      .filter(item => item.strength !== '几乎无变化')\n                      .map(item => (\n                        <li key={item.key}>{item.suggestion}</li>\n                      ))}\n                    {anomalyReport.length > 0 && (\n                      <li>加强日常监测，特别关注异常参数的变化趋势</li>\n                    )}\n                    {waterAnalysis.qualityLevel.level === 'I' || waterAnalysis.qualityLevel.level === 'II' ? (\n                      <li>继续保持现有水质管理措施</li>\n                    ) : (\n                      <li>加强水质管理，提高水质等级</li>\n                    )}\n                  </ul>\n                </Paragraph>\n              </Typography>\n            </Card>\n          )}\n        </TabPane>\n      </Tabs>\n      )}\n    </div>\n  );\n};\n\nexport default WaterQualityReport;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}