{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u6587\\u96C5\\u7AF9\\\\\\u4F5C\\u4E1A\\\\\\u5927\\u4E09\\u4E0B\\\\\\u8F6F\\u4EF6\\u5DE5\\u7A0B\\\\NKU_Software-main2\\\\NKU_Software-main\\\\frontend\\\\src\\\\components\\\\MonitoringDashboard\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, Row, Col, Statistic, Alert, Divider, Badge, Switch, Tooltip, Button } from 'antd';\nimport { WarningOutlined, CheckCircleOutlined, ReloadOutlined } from '@ant-design/icons';\nimport ReactECharts from 'echarts-for-react';\nimport { loadMonthlyWaterQualityData, analyzeWaterQuality, generateWaterQualityAnomalyReport } from '../../services/dataService';\nimport { getAllDevices, getDeviceStatus, autoControlDevicesByWaterQuality, POWER_STATUS } from '../../services/deviceControlService';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MonitoringDashboard = () => {\n  _s();\n  const [waterData, setWaterData] = useState(null);\n  const [waterAnalysis, setWaterAnalysis] = useState(null);\n  const [anomalies, setAnomalies] = useState([]);\n  const [devices, setDevices] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [autoControl, setAutoControl] = useState(false);\n  const [thresholds, setThresholds] = useState({\n    oxygen: {\n      min: 5,\n      max: 8\n    },\n    ph: {\n      min: 6.5,\n      max: 8.5\n    },\n    temperature: {\n      min: 18,\n      max: 30\n    },\n    ammonia: {\n      min: 0,\n      max: 1.0\n    },\n    phosphorus: {\n      min: 0,\n      max: 0.2\n    },\n    turbidity: {\n      min: 0,\n      max: 20\n    }\n  });\n\n  // 加载水质数据和设备数据\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        // 加载水质数据\n        const date = new Date();\n        const year = date.getFullYear().toString();\n        const month = (date.getMonth() + 1).toString().padStart(2, '0');\n        const waterQualityData = await loadMonthlyWaterQualityData(year, month);\n        setWaterData(waterQualityData);\n\n        // 分析水质数据\n        if (waterQualityData) {\n          const analysis = analyzeWaterQuality(waterQualityData);\n          setWaterAnalysis(analysis);\n\n          // 生成异常报告\n          const anomalyReport = generateWaterQualityAnomalyReport(waterQualityData);\n          setAnomalies(anomalyReport);\n        }\n\n        // 加载设备数据\n        const deviceList = await getAllDevices();\n        setDevices(deviceList);\n      } catch (error) {\n        console.error('加载监控数据失败:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n\n    // 定时刷新数据\n    const intervalId = setInterval(() => {\n      fetchData();\n    }, 300000); // 每5分钟刷新一次\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  // 自动控制设备\n  useEffect(() => {\n    if (autoControl && waterData && devices.length > 0) {\n      const performAutoControl = async () => {\n        try {\n          const results = await autoControlDevicesByWaterQuality(waterData, devices);\n          console.log('自动控制结果:', results);\n\n          // 更新设备状态\n          const updatedDevices = await Promise.all(devices.map(async device => {\n            const status = await getDeviceStatus(device.id);\n            return {\n              ...device,\n              ...status\n            };\n          }));\n          setDevices(updatedDevices);\n        } catch (error) {\n          console.error('自动控制设备失败:', error);\n        }\n      };\n      performAutoControl();\n    }\n  }, [autoControl, waterData, devices]);\n\n  // 刷新数据\n  const handleRefresh = async () => {\n    try {\n      setLoading(true);\n      // 加载水质数据\n      const date = new Date();\n      const year = date.getFullYear().toString();\n      const month = (date.getMonth() + 1).toString().padStart(2, '0');\n      const waterQualityData = await loadMonthlyWaterQualityData(year, month);\n      setWaterData(waterQualityData);\n\n      // 分析水质数据\n      if (waterQualityData) {\n        const analysis = analyzeWaterQuality(waterQualityData);\n        setWaterAnalysis(analysis);\n\n        // 生成异常报告\n        const anomalyReport = generateWaterQualityAnomalyReport(waterQualityData);\n        setAnomalies(anomalyReport);\n      }\n\n      // 加载设备数据\n      const deviceList = await getAllDevices();\n      setDevices(deviceList);\n    } catch (error) {\n      console.error('刷新监控数据失败:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // 获取参数状态颜色\n  const getParameterStatusColor = (value, parameter) => {\n    const {\n      min,\n      max\n    } = thresholds[parameter] || {\n      min: 0,\n      max: 100\n    };\n    if (value < min || value > max) {\n      return '#f5222d'; // 红色，异常\n    }\n    return '#52c41a'; // 绿色，正常\n  };\n\n  // 生成水质参数图表选项\n  const getWaterQualityChartOption = () => {\n    if (!waterData) return {};\n    return {\n      tooltip: {\n        trigger: 'axis'\n      },\n      legend: {\n        data: ['水温', 'pH值', '溶解氧', '氨氮', '总磷'],\n        bottom: 0\n      },\n      grid: {\n        left: '3%',\n        right: '4%',\n        bottom: '10%',\n        top: '3%',\n        containLabel: true\n      },\n      xAxis: {\n        type: 'category',\n        boundaryGap: false,\n        data: waterData.days\n      },\n      yAxis: {\n        type: 'value'\n      },\n      series: [{\n        name: '水温',\n        type: 'line',\n        data: waterData.temperature,\n        markLine: {\n          silent: true,\n          lineStyle: {\n            color: '#f5222d'\n          },\n          data: [{\n            yAxis: thresholds.temperature.min,\n            name: '最低水温'\n          }, {\n            yAxis: thresholds.temperature.max,\n            name: '最高水温'\n          }]\n        }\n      }, {\n        name: 'pH值',\n        type: 'line',\n        data: waterData.ph,\n        markLine: {\n          silent: true,\n          lineStyle: {\n            color: '#f5222d'\n          },\n          data: [{\n            yAxis: thresholds.ph.min,\n            name: '最低pH'\n          }, {\n            yAxis: thresholds.ph.max,\n            name: '最高pH'\n          }]\n        }\n      }, {\n        name: '溶解氧',\n        type: 'line',\n        data: waterData.oxygen,\n        markLine: {\n          silent: true,\n          lineStyle: {\n            color: '#f5222d'\n          },\n          data: [{\n            yAxis: thresholds.oxygen.min,\n            name: '最低溶解氧'\n          }, {\n            yAxis: thresholds.oxygen.max,\n            name: '最高溶解氧'\n          }]\n        }\n      }, {\n        name: '氨氮',\n        type: 'line',\n        data: waterData.ammonia,\n        markLine: {\n          silent: true,\n          lineStyle: {\n            color: '#f5222d'\n          },\n          data: [{\n            yAxis: thresholds.ammonia.max,\n            name: '氨氮上限'\n          }]\n        }\n      }, {\n        name: '总磷',\n        type: 'line',\n        data: waterData.phosphorus,\n        markLine: {\n          silent: true,\n          lineStyle: {\n            color: '#f5222d'\n          },\n          data: [{\n            yAxis: thresholds.phosphorus.max,\n            name: '总磷上限'\n          }]\n        }\n      }]\n    };\n  };\n\n  // 生成设备状态图表选项\n  const getDeviceStatusChartOption = () => {\n    if (!devices || devices.length === 0) return {};\n    const onlineCount = devices.filter(d => d.status === 'online').length;\n    const offlineCount = devices.filter(d => d.status === 'offline').length;\n    const warningCount = devices.filter(d => d.status === 'warning').length;\n    return {\n      tooltip: {\n        trigger: 'item'\n      },\n      legend: {\n        bottom: 0\n      },\n      series: [{\n        name: '设备状态',\n        type: 'pie',\n        radius: ['40%', '70%'],\n        avoidLabelOverlap: false,\n        itemStyle: {\n          borderRadius: 10,\n          borderColor: '#fff',\n          borderWidth: 2\n        },\n        label: {\n          show: false\n        },\n        emphasis: {\n          label: {\n            show: true,\n            fontSize: '18',\n            fontWeight: 'bold'\n          }\n        },\n        labelLine: {\n          show: false\n        },\n        data: [{\n          value: onlineCount,\n          name: '在线',\n          itemStyle: {\n            color: '#52c41a'\n          }\n        }, {\n          value: offlineCount,\n          name: '离线',\n          itemStyle: {\n            color: '#f5222d'\n          }\n        }, {\n          value: warningCount,\n          name: '警告',\n          itemStyle: {\n            color: '#faad14'\n          }\n        }]\n      }]\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '16px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      title: \"\\u6C34\\u8D28\\u76D1\\u63A7\\u9762\\u677F\",\n      extra: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"\\u81EA\\u52A8\\u63A7\\u5236\",\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: autoControl,\n            onChange: setAutoControl,\n            style: {\n              marginRight: '16px'\n            },\n            checkedChildren: \"\\u81EA\\u52A8\\u63A7\\u5236\\u5F00\",\n            unCheckedChildren: \"\\u81EA\\u52A8\\u63A7\\u5236\\u5173\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          icon: /*#__PURE__*/_jsxDEV(ReloadOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 27\n          }, this),\n          onClick: handleRefresh,\n          loading: loading,\n          children: \"\\u5237\\u65B0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this),\n      children: [waterAnalysis && /*#__PURE__*/_jsxDEV(Alert, {\n        message: `当前水质等级: ${waterAnalysis.qualityLevel.level} (${waterAnalysis.qualityLevel.description})`,\n        type: waterAnalysis.qualityLevel.level === 'I' || waterAnalysis.qualityLevel.level === 'II' ? 'success' : waterAnalysis.qualityLevel.level === 'III' ? 'warning' : 'error',\n        showIcon: true,\n        style: {\n          marginBottom: '16px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        gutter: [16, 16],\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 24,\n          lg: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: \"\\u5B9E\\u65F6\\u6C34\\u8D28\\u53C2\\u6570\",\n            bordered: false,\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              gutter: [16, 16],\n              children: waterAnalysis && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  span: 8,\n                  children: /*#__PURE__*/_jsxDEV(Statistic, {\n                    title: \"\\u6C34\\u6E29 (\\xB0C)\",\n                    value: waterAnalysis.averages.temperature,\n                    valueStyle: {\n                      color: getParameterStatusColor(parseFloat(waterAnalysis.averages.temperature), 'temperature')\n                    },\n                    prefix: parseFloat(waterAnalysis.averages.temperature) >= thresholds.temperature.min && parseFloat(waterAnalysis.averages.temperature) <= thresholds.temperature.max ? /*#__PURE__*/_jsxDEV(CheckCircleOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 296,\n                      columnNumber: 32\n                    }, this) : /*#__PURE__*/_jsxDEV(WarningOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 296,\n                      columnNumber: 58\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  span: 8,\n                  children: /*#__PURE__*/_jsxDEV(Statistic, {\n                    title: \"pH\\u503C\",\n                    value: waterAnalysis.averages.ph,\n                    valueStyle: {\n                      color: getParameterStatusColor(parseFloat(waterAnalysis.averages.ph), 'ph')\n                    },\n                    prefix: parseFloat(waterAnalysis.averages.ph) >= thresholds.ph.min && parseFloat(waterAnalysis.averages.ph) <= thresholds.ph.max ? /*#__PURE__*/_jsxDEV(CheckCircleOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 32\n                    }, this) : /*#__PURE__*/_jsxDEV(WarningOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 58\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  span: 8,\n                  children: /*#__PURE__*/_jsxDEV(Statistic, {\n                    title: \"\\u6EB6\\u89E3\\u6C27 (mg/L)\",\n                    value: waterAnalysis.averages.oxygen,\n                    valueStyle: {\n                      color: getParameterStatusColor(parseFloat(waterAnalysis.averages.oxygen), 'oxygen')\n                    },\n                    prefix: parseFloat(waterAnalysis.averages.oxygen) >= thresholds.oxygen.min && parseFloat(waterAnalysis.averages.oxygen) <= thresholds.oxygen.max ? /*#__PURE__*/_jsxDEV(CheckCircleOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 316,\n                      columnNumber: 32\n                    }, this) : /*#__PURE__*/_jsxDEV(WarningOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 316,\n                      columnNumber: 58\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  span: 8,\n                  children: /*#__PURE__*/_jsxDEV(Statistic, {\n                    title: \"\\u6C28\\u6C2E (mg/L)\",\n                    value: waterAnalysis.averages.ammonia,\n                    valueStyle: {\n                      color: getParameterStatusColor(parseFloat(waterAnalysis.averages.ammonia), 'ammonia')\n                    },\n                    prefix: parseFloat(waterAnalysis.averages.ammonia) <= thresholds.ammonia.max ? /*#__PURE__*/_jsxDEV(CheckCircleOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 325,\n                      columnNumber: 32\n                    }, this) : /*#__PURE__*/_jsxDEV(WarningOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 325,\n                      columnNumber: 58\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  span: 8,\n                  children: /*#__PURE__*/_jsxDEV(Statistic, {\n                    title: \"\\u603B\\u78F7 (mg/L)\",\n                    value: waterAnalysis.averages.phosphorus,\n                    valueStyle: {\n                      color: getParameterStatusColor(parseFloat(waterAnalysis.averages.phosphorus), 'phosphorus')\n                    },\n                    prefix: parseFloat(waterAnalysis.averages.phosphorus) <= thresholds.phosphorus.max ? /*#__PURE__*/_jsxDEV(CheckCircleOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 334,\n                      columnNumber: 32\n                    }, this) : /*#__PURE__*/_jsxDEV(WarningOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 334,\n                      columnNumber: 58\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  span: 8,\n                  children: /*#__PURE__*/_jsxDEV(Statistic, {\n                    title: \"\\u6D4A\\u5EA6 (NTU)\",\n                    value: waterAnalysis.averages.turbidity,\n                    valueStyle: {\n                      color: getParameterStatusColor(parseFloat(waterAnalysis.averages.turbidity), 'turbidity')\n                    },\n                    prefix: parseFloat(waterAnalysis.averages.turbidity) <= thresholds.turbidity.max ? /*#__PURE__*/_jsxDEV(CheckCircleOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 343,\n                      columnNumber: 32\n                    }, this) : /*#__PURE__*/_jsxDEV(WarningOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 343,\n                      columnNumber: 58\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 24,\n          lg: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: \"\\u8BBE\\u5907\\u72B6\\u6001\\u6982\\u89C8\",\n            bordered: false,\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              gutter: [16, 16],\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                span: 8,\n                children: /*#__PURE__*/_jsxDEV(Statistic, {\n                  title: \"\\u8BBE\\u5907\\u603B\\u6570\",\n                  value: devices.length,\n                  suffix: `台`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 8,\n                children: /*#__PURE__*/_jsxDEV(Statistic, {\n                  title: \"\\u5728\\u7EBF\\u8BBE\\u5907\",\n                  value: devices.filter(d => d.status === 'online').length,\n                  valueStyle: {\n                    color: '#52c41a'\n                  },\n                  suffix: `台`,\n                  prefix: /*#__PURE__*/_jsxDEV(Badge, {\n                    status: \"success\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 8,\n                children: /*#__PURE__*/_jsxDEV(Statistic, {\n                  title: \"\\u8FD0\\u884C\\u8BBE\\u5907\",\n                  value: devices.filter(d => d.powerStatus === POWER_STATUS.ON).length,\n                  valueStyle: {\n                    color: '#1890ff'\n                  },\n                  suffix: `台`,\n                  prefix: /*#__PURE__*/_jsxDEV(Badge, {\n                    status: \"processing\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 378,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              style: {\n                margin: '16px 0'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ReactECharts, {\n              option: getDeviceStatusChartOption(),\n              style: {\n                height: '200px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 24,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: \"\\u6C34\\u8D28\\u53C2\\u6570\\u8D8B\\u52BF\",\n            bordered: false,\n            children: /*#__PURE__*/_jsxDEV(ReactECharts, {\n              option: getWaterQualityChartOption(),\n              style: {\n                height: '300px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 24,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(WarningOutlined, {\n                style: {\n                  color: '#f5222d'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 28\n              }, this), \" \\u6C34\\u8D28\\u5F02\\u5E38\\u8B66\\u62A5\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 22\n            }, this),\n            bordered: false,\n            children: anomalies && anomalies.length > 0 ? anomalies.map((anomaly, index) => /*#__PURE__*/_jsxDEV(Alert, {\n              message: `${anomaly.day} - ${anomaly.parameter}${anomaly.severity}`,\n              description: `测量值: ${anomaly.value}, 正常范围: ${anomaly.normalRange}, 影响: ${anomaly.impact}`,\n              type: \"error\",\n              showIcon: true,\n              style: {\n                marginBottom: '8px'\n              }\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 19\n            }, this)) : /*#__PURE__*/_jsxDEV(Alert, {\n              message: \"\\u5F53\\u524D\\u65E0\\u6C34\\u8D28\\u5F02\\u5E38\",\n              type: \"success\",\n              showIcon: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n};\n_s(MonitoringDashboard, \"8D6Fcrl4Sm4r7NBBNCucTcfXqtw=\");\n_c = MonitoringDashboard;\nexport default MonitoringDashboard;\nvar _c;\n$RefreshReg$(_c, \"MonitoringDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Card","Row","Col","Statistic","Alert","Divider","Badge","Switch","Tooltip","Button","WarningOutlined","CheckCircleOutlined","ReloadOutlined","ReactECharts","loadMonthlyWaterQualityData","analyzeWaterQuality","generateWaterQualityAnomalyReport","getAllDevices","getDeviceStatus","autoControlDevicesByWaterQuality","POWER_STATUS","jsxDEV","_jsxDEV","Fragment","_Fragment","MonitoringDashboard","_s","waterData","setWaterData","waterAnalysis","setWaterAnalysis","anomalies","setAnomalies","devices","setDevices","loading","setLoading","autoControl","setAutoControl","thresholds","setThresholds","oxygen","min","max","ph","temperature","ammonia","phosphorus","turbidity","fetchData","date","Date","year","getFullYear","toString","month","getMonth","padStart","waterQualityData","analysis","anomalyReport","deviceList","error","console","intervalId","setInterval","clearInterval","length","performAutoControl","results","log","updatedDevices","Promise","all","map","device","status","id","handleRefresh","getParameterStatusColor","value","parameter","getWaterQualityChartOption","tooltip","trigger","legend","data","bottom","grid","left","right","top","containLabel","xAxis","type","boundaryGap","days","yAxis","series","name","markLine","silent","lineStyle","color","getDeviceStatusChartOption","onlineCount","filter","d","offlineCount","warningCount","radius","avoidLabelOverlap","itemStyle","borderRadius","borderColor","borderWidth","label","show","emphasis","fontSize","fontWeight","labelLine","style","padding","children","title","extra","checked","onChange","marginRight","checkedChildren","unCheckedChildren","fileName","_jsxFileName","lineNumber","columnNumber","icon","onClick","message","qualityLevel","level","description","showIcon","marginBottom","gutter","span","lg","bordered","averages","valueStyle","parseFloat","prefix","suffix","powerStatus","ON","margin","option","height","anomaly","index","day","severity","normalRange","impact","_c","$RefreshReg$"],"sources":["D:/文雅竹/作业/大三下/软件工程/NKU_Software-main2/NKU_Software-main/frontend/src/components/MonitoringDashboard/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, Row, Col, Statistic, Alert, Divider, Badge, Switch, Tooltip, Button } from 'antd';\nimport { WarningOutlined, CheckCircleOutlined, ReloadOutlined } from '@ant-design/icons';\nimport ReactECharts from 'echarts-for-react';\nimport { loadMonthlyWaterQualityData, analyzeWaterQuality, generateWaterQualityAnomalyReport } from '../../services/dataService';\nimport { getAllDevices, getDeviceStatus, autoControlDevicesByWaterQuality, POWER_STATUS } from '../../services/deviceControlService';\n\nconst MonitoringDashboard = () => {\n  const [waterData, setWaterData] = useState(null);\n  const [waterAnalysis, setWaterAnalysis] = useState(null);\n  const [anomalies, setAnomalies] = useState([]);\n  const [devices, setDevices] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [autoControl, setAutoControl] = useState(false);\n  const [thresholds, setThresholds] = useState({\n    oxygen: { min: 5, max: 8 },\n    ph: { min: 6.5, max: 8.5 },\n    temperature: { min: 18, max: 30 },\n    ammonia: { min: 0, max: 1.0 },\n    phosphorus: { min: 0, max: 0.2 },\n    turbidity: { min: 0, max: 20 }\n  });\n\n  // 加载水质数据和设备数据\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        // 加载水质数据\n        const date = new Date();\n        const year = date.getFullYear().toString();\n        const month = (date.getMonth() + 1).toString().padStart(2, '0');\n        const waterQualityData = await loadMonthlyWaterQualityData(year, month);\n        setWaterData(waterQualityData);\n        \n        // 分析水质数据\n        if (waterQualityData) {\n          const analysis = analyzeWaterQuality(waterQualityData);\n          setWaterAnalysis(analysis);\n          \n          // 生成异常报告\n          const anomalyReport = generateWaterQualityAnomalyReport(waterQualityData);\n          setAnomalies(anomalyReport);\n        }\n        \n        // 加载设备数据\n        const deviceList = await getAllDevices();\n        setDevices(deviceList);\n      } catch (error) {\n        console.error('加载监控数据失败:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchData();\n    \n    // 定时刷新数据\n    const intervalId = setInterval(() => {\n      fetchData();\n    }, 300000); // 每5分钟刷新一次\n    \n    return () => clearInterval(intervalId);\n  }, []);\n  \n  // 自动控制设备\n  useEffect(() => {\n    if (autoControl && waterData && devices.length > 0) {\n      const performAutoControl = async () => {\n        try {\n          const results = await autoControlDevicesByWaterQuality(waterData, devices);\n          console.log('自动控制结果:', results);\n          \n          // 更新设备状态\n          const updatedDevices = await Promise.all(\n            devices.map(async (device) => {\n              const status = await getDeviceStatus(device.id);\n              return { ...device, ...status };\n            })\n          );\n          setDevices(updatedDevices);\n        } catch (error) {\n          console.error('自动控制设备失败:', error);\n        }\n      };\n      \n      performAutoControl();\n    }\n  }, [autoControl, waterData, devices]);\n  \n  // 刷新数据\n  const handleRefresh = async () => {\n    try {\n      setLoading(true);\n      // 加载水质数据\n      const date = new Date();\n      const year = date.getFullYear().toString();\n      const month = (date.getMonth() + 1).toString().padStart(2, '0');\n      const waterQualityData = await loadMonthlyWaterQualityData(year, month);\n      setWaterData(waterQualityData);\n      \n      // 分析水质数据\n      if (waterQualityData) {\n        const analysis = analyzeWaterQuality(waterQualityData);\n        setWaterAnalysis(analysis);\n        \n        // 生成异常报告\n        const anomalyReport = generateWaterQualityAnomalyReport(waterQualityData);\n        setAnomalies(anomalyReport);\n      }\n      \n      // 加载设备数据\n      const deviceList = await getAllDevices();\n      setDevices(deviceList);\n    } catch (error) {\n      console.error('刷新监控数据失败:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // 获取参数状态颜色\n  const getParameterStatusColor = (value, parameter) => {\n    const { min, max } = thresholds[parameter] || { min: 0, max: 100 };\n    if (value < min || value > max) {\n      return '#f5222d'; // 红色，异常\n    }\n    return '#52c41a'; // 绿色，正常\n  };\n  \n  // 生成水质参数图表选项\n  const getWaterQualityChartOption = () => {\n    if (!waterData) return {};\n    \n    return {\n      tooltip: { trigger: 'axis' },\n      legend: {\n        data: ['水温', 'pH值', '溶解氧', '氨氮', '总磷'],\n        bottom: 0\n      },\n      grid: { left: '3%', right: '4%', bottom: '10%', top: '3%', containLabel: true },\n      xAxis: {\n        type: 'category',\n        boundaryGap: false,\n        data: waterData.days\n      },\n      yAxis: { type: 'value' },\n      series: [\n        {\n          name: '水温',\n          type: 'line',\n          data: waterData.temperature,\n          markLine: {\n            silent: true,\n            lineStyle: { color: '#f5222d' },\n            data: [\n              { yAxis: thresholds.temperature.min, name: '最低水温' },\n              { yAxis: thresholds.temperature.max, name: '最高水温' }\n            ]\n          }\n        },\n        {\n          name: 'pH值',\n          type: 'line',\n          data: waterData.ph,\n          markLine: {\n            silent: true,\n            lineStyle: { color: '#f5222d' },\n            data: [\n              { yAxis: thresholds.ph.min, name: '最低pH' },\n              { yAxis: thresholds.ph.max, name: '最高pH' }\n            ]\n          }\n        },\n        {\n          name: '溶解氧',\n          type: 'line',\n          data: waterData.oxygen,\n          markLine: {\n            silent: true,\n            lineStyle: { color: '#f5222d' },\n            data: [\n              { yAxis: thresholds.oxygen.min, name: '最低溶解氧' },\n              { yAxis: thresholds.oxygen.max, name: '最高溶解氧' }\n            ]\n          }\n        },\n        {\n          name: '氨氮',\n          type: 'line',\n          data: waterData.ammonia,\n          markLine: {\n            silent: true,\n            lineStyle: { color: '#f5222d' },\n            data: [\n              { yAxis: thresholds.ammonia.max, name: '氨氮上限' }\n            ]\n          }\n        },\n        {\n          name: '总磷',\n          type: 'line',\n          data: waterData.phosphorus,\n          markLine: {\n            silent: true,\n            lineStyle: { color: '#f5222d' },\n            data: [\n              { yAxis: thresholds.phosphorus.max, name: '总磷上限' }\n            ]\n          }\n        }\n      ]\n    };\n  };\n  \n  // 生成设备状态图表选项\n  const getDeviceStatusChartOption = () => {\n    if (!devices || devices.length === 0) return {};\n    \n    const onlineCount = devices.filter(d => d.status === 'online').length;\n    const offlineCount = devices.filter(d => d.status === 'offline').length;\n    const warningCount = devices.filter(d => d.status === 'warning').length;\n    \n    return {\n      tooltip: { trigger: 'item' },\n      legend: { bottom: 0 },\n      series: [\n        {\n          name: '设备状态',\n          type: 'pie',\n          radius: ['40%', '70%'],\n          avoidLabelOverlap: false,\n          itemStyle: {\n            borderRadius: 10,\n            borderColor: '#fff',\n            borderWidth: 2\n          },\n          label: { show: false },\n          emphasis: {\n            label: { show: true, fontSize: '18', fontWeight: 'bold' }\n          },\n          labelLine: { show: false },\n          data: [\n            { value: onlineCount, name: '在线', itemStyle: { color: '#52c41a' } },\n            { value: offlineCount, name: '离线', itemStyle: { color: '#f5222d' } },\n            { value: warningCount, name: '警告', itemStyle: { color: '#faad14' } }\n          ]\n        }\n      ]\n    };\n  };\n  \n  return (\n    <div style={{ padding: '16px' }}>\n      <Card \n        title=\"水质监控面板\" \n        extra={\n          <div>\n            <Tooltip title=\"自动控制\">\n              <Switch \n                checked={autoControl} \n                onChange={setAutoControl} \n                style={{ marginRight: '16px' }} \n                checkedChildren=\"自动控制开\" \n                unCheckedChildren=\"自动控制关\"\n              />\n            </Tooltip>\n            <Button icon={<ReloadOutlined />} onClick={handleRefresh} loading={loading}>刷新</Button>\n          </div>\n        }\n      >\n        {waterAnalysis && (\n          <Alert \n            message={`当前水质等级: ${waterAnalysis.qualityLevel.level} (${waterAnalysis.qualityLevel.description})`}\n            type={waterAnalysis.qualityLevel.level === 'I' || waterAnalysis.qualityLevel.level === 'II' ? 'success' : \n                 waterAnalysis.qualityLevel.level === 'III' ? 'warning' : 'error'}\n            showIcon\n            style={{ marginBottom: '16px' }}\n          />\n        )}\n        \n        <Row gutter={[16, 16]}>\n          {/* 水质参数统计 */}\n          <Col span={24} lg={12}>\n            <Card title=\"实时水质参数\" bordered={false}>\n              <Row gutter={[16, 16]}>\n                {waterAnalysis && (\n                  <>\n                    <Col span={8}>\n                      <Statistic \n                        title=\"水温 (°C)\" \n                        value={waterAnalysis.averages.temperature} \n                        valueStyle={{ color: getParameterStatusColor(parseFloat(waterAnalysis.averages.temperature), 'temperature') }}\n                        prefix={parseFloat(waterAnalysis.averages.temperature) >= thresholds.temperature.min && \n                               parseFloat(waterAnalysis.averages.temperature) <= thresholds.temperature.max ? \n                               <CheckCircleOutlined /> : <WarningOutlined />}\n                      />\n                    </Col>\n                    <Col span={8}>\n                      <Statistic \n                        title=\"pH值\" \n                        value={waterAnalysis.averages.ph} \n                        valueStyle={{ color: getParameterStatusColor(parseFloat(waterAnalysis.averages.ph), 'ph') }}\n                        prefix={parseFloat(waterAnalysis.averages.ph) >= thresholds.ph.min && \n                               parseFloat(waterAnalysis.averages.ph) <= thresholds.ph.max ? \n                               <CheckCircleOutlined /> : <WarningOutlined />}\n                      />\n                    </Col>\n                    <Col span={8}>\n                      <Statistic \n                        title=\"溶解氧 (mg/L)\" \n                        value={waterAnalysis.averages.oxygen} \n                        valueStyle={{ color: getParameterStatusColor(parseFloat(waterAnalysis.averages.oxygen), 'oxygen') }}\n                        prefix={parseFloat(waterAnalysis.averages.oxygen) >= thresholds.oxygen.min && \n                               parseFloat(waterAnalysis.averages.oxygen) <= thresholds.oxygen.max ? \n                               <CheckCircleOutlined /> : <WarningOutlined />}\n                      />\n                    </Col>\n                    <Col span={8}>\n                      <Statistic \n                        title=\"氨氮 (mg/L)\" \n                        value={waterAnalysis.averages.ammonia} \n                        valueStyle={{ color: getParameterStatusColor(parseFloat(waterAnalysis.averages.ammonia), 'ammonia') }}\n                        prefix={parseFloat(waterAnalysis.averages.ammonia) <= thresholds.ammonia.max ? \n                               <CheckCircleOutlined /> : <WarningOutlined />}\n                      />\n                    </Col>\n                    <Col span={8}>\n                      <Statistic \n                        title=\"总磷 (mg/L)\" \n                        value={waterAnalysis.averages.phosphorus} \n                        valueStyle={{ color: getParameterStatusColor(parseFloat(waterAnalysis.averages.phosphorus), 'phosphorus') }}\n                        prefix={parseFloat(waterAnalysis.averages.phosphorus) <= thresholds.phosphorus.max ? \n                               <CheckCircleOutlined /> : <WarningOutlined />}\n                      />\n                    </Col>\n                    <Col span={8}>\n                      <Statistic \n                        title=\"浊度 (NTU)\" \n                        value={waterAnalysis.averages.turbidity} \n                        valueStyle={{ color: getParameterStatusColor(parseFloat(waterAnalysis.averages.turbidity), 'turbidity') }}\n                        prefix={parseFloat(waterAnalysis.averages.turbidity) <= thresholds.turbidity.max ? \n                               <CheckCircleOutlined /> : <WarningOutlined />}\n                      />\n                    </Col>\n                  </>\n                )}\n              </Row>\n            </Card>\n          </Col>\n          \n          {/* 设备状态统计 */}\n          <Col span={24} lg={12}>\n            <Card title=\"设备状态概览\" bordered={false}>\n              <Row gutter={[16, 16]}>\n                <Col span={8}>\n                  <Statistic \n                    title=\"设备总数\" \n                    value={devices.length} \n                    suffix={`台`}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Statistic \n                    title=\"在线设备\" \n                    value={devices.filter(d => d.status === 'online').length} \n                    valueStyle={{ color: '#52c41a' }}\n                    suffix={`台`}\n                    prefix={<Badge status=\"success\" />}\n                  />\n                </Col>\n                <Col span={8}>\n                  <Statistic \n                    title=\"运行设备\" \n                    value={devices.filter(d => d.powerStatus === POWER_STATUS.ON).length} \n                    valueStyle={{ color: '#1890ff' }}\n                    suffix={`台`}\n                    prefix={<Badge status=\"processing\" />}\n                  />\n                </Col>\n              </Row>\n              <Divider style={{ margin: '16px 0' }} />\n              <ReactECharts option={getDeviceStatusChartOption()} style={{ height: '200px' }} />\n            </Card>\n          </Col>\n          \n          {/* 水质趋势图 */}\n          <Col span={24}>\n            <Card title=\"水质参数趋势\" bordered={false}>\n              <ReactECharts option={getWaterQualityChartOption()} style={{ height: '300px' }} />\n            </Card>\n          </Col>\n          \n          {/* 异常警报 */}\n          <Col span={24}>\n            <Card \n              title={<span><WarningOutlined style={{ color: '#f5222d' }} /> 水质异常警报</span>} \n              bordered={false}\n            >\n              {anomalies && anomalies.length > 0 ? (\n                anomalies.map((anomaly, index) => (\n                  <Alert\n                    key={index}\n                    message={`${anomaly.day} - ${anomaly.parameter}${anomaly.severity}`}\n                    description={`测量值: ${anomaly.value}, 正常范围: ${anomaly.normalRange}, 影响: ${anomaly.impact}`}\n                    type=\"error\"\n                    showIcon\n                    style={{ marginBottom: '8px' }}\n                  />\n                ))\n              ) : (\n                <Alert message=\"当前无水质异常\" type=\"success\" showIcon />\n              )}\n            </Card>\n          </Col>\n        </Row>\n      </Card>\n    </div>\n  );\n};\n\nexport default MonitoringDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}