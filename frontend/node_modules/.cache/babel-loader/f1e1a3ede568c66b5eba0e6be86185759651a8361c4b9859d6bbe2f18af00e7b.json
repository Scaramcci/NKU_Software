{"ast":null,"code":"var _user;\nimport { createSlice } from '@reduxjs/toolkit';\nimport { USER_ROLES } from '../../services/authService';\n\n// 检查本地存储中是否有用户信息和token\nconst token = localStorage.getItem('authToken');\nconst userStr = localStorage.getItem('currentUser');\nlet user = null;\ntry {\n  user = userStr ? JSON.parse(userStr) : null;\n} catch (e) {\n  // 解析错误时清除本地存储\n  localStorage.removeItem('authToken');\n  localStorage.removeItem('currentUser');\n}\nconst initialState = {\n  isAuthenticated: !!token && !!user,\n  user: user,\n  token: token,\n  loading: false,\n  error: null,\n  registering: false,\n  registerError: null,\n  userRole: ((_user = user) === null || _user === void 0 ? void 0 : _user.role) || null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    loginStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    loginSuccess: (state, action) => {\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.userRole = action.payload.user.role || USER_ROLES.USER;\n      state.loading = false;\n      state.error = null;\n    },\n    loginFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    registerStart: state => {\n      state.registering = true;\n      state.registerError = null;\n    },\n    registerSuccess: (state, action) => {\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.userRole = action.payload.user.role || USER_ROLES.USER;\n      state.registering = false;\n      state.registerError = null;\n    },\n    registerFailure: (state, action) => {\n      state.registering = false;\n      state.registerError = action.payload;\n    },\n    updateUserProfile: (state, action) => {\n      state.user = {\n        ...state.user,\n        ...action.payload\n      };\n      localStorage.setItem('currentUser', JSON.stringify(state.user));\n    },\n    updateUserRole: (state, action) => {\n      if (state.user) {\n        state.user.role = action.payload;\n        state.userRole = action.payload;\n        localStorage.setItem('currentUser', JSON.stringify(state.user));\n      }\n    },\n    logout: state => {\n      state.isAuthenticated = false;\n      state.user = null;\n      state.token = null;\n      state.userRole = null;\n      state.loading = false;\n      state.error = null;\n      state.registering = false;\n      state.registerError = null;\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('currentUser');\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  registerStart,\n  registerSuccess,\n  registerFailure,\n  updateUserProfile,\n  updateUserRole,\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","USER_ROLES","token","localStorage","getItem","userStr","user","JSON","parse","e","removeItem","initialState","isAuthenticated","loading","error","registering","registerError","userRole","_user","role","authSlice","name","reducers","loginStart","state","loginSuccess","action","payload","USER","loginFailure","registerStart","registerSuccess","registerFailure","updateUserProfile","setItem","stringify","updateUserRole","logout","actions","reducer"],"sources":["D:/文雅竹/作业/大三下/软件工程/NKU_Software-main2/NKU_Software-main/frontend/src/redux/reducers/authSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { USER_ROLES } from '../../services/authService';\n\n// 检查本地存储中是否有用户信息和token\nconst token = localStorage.getItem('authToken');\nconst userStr = localStorage.getItem('currentUser');\nlet user = null;\n\ntry {\n  user = userStr ? JSON.parse(userStr) : null;\n} catch (e) {\n  // 解析错误时清除本地存储\n  localStorage.removeItem('authToken');\n  localStorage.removeItem('currentUser');\n}\n\nconst initialState = {\n  isAuthenticated: !!token && !!user,\n  user: user,\n  token: token,\n  loading: false,\n  error: null,\n  registering: false,\n  registerError: null,\n  userRole: user?.role || null\n};\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    loginStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    loginSuccess: (state, action) => {\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.userRole = action.payload.user.role || USER_ROLES.USER;\n      state.loading = false;\n      state.error = null;\n    },\n    loginFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    registerStart: (state) => {\n      state.registering = true;\n      state.registerError = null;\n    },\n    registerSuccess: (state, action) => {\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.userRole = action.payload.user.role || USER_ROLES.USER;\n      state.registering = false;\n      state.registerError = null;\n    },\n    registerFailure: (state, action) => {\n      state.registering = false;\n      state.registerError = action.payload;\n    },\n    updateUserProfile: (state, action) => {\n      state.user = { ...state.user, ...action.payload };\n      localStorage.setItem('currentUser', JSON.stringify(state.user));\n    },\n    updateUserRole: (state, action) => {\n      if (state.user) {\n        state.user.role = action.payload;\n        state.userRole = action.payload;\n        localStorage.setItem('currentUser', JSON.stringify(state.user));\n      }\n    },\n    logout: (state) => {\n      state.isAuthenticated = false;\n      state.user = null;\n      state.token = null;\n      state.userRole = null;\n      state.loading = false;\n      state.error = null;\n      state.registering = false;\n      state.registerError = null;\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('currentUser');\n    }\n  }\n});\n\nexport const { loginStart, loginSuccess, loginFailure, registerStart, registerSuccess, registerFailure, updateUserProfile, updateUserRole, logout } = authSlice.actions;\nexport default authSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}