{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u6587\\u96C5\\u7AF9\\\\\\u4F5C\\u4E1A\\\\\\u5927\\u4E09\\u4E0B\\\\\\u8F6F\\u4EF6\\u5DE5\\u7A0B\\\\NKU_Software\\\\frontend\\\\src\\\\components\\\\ProtectedRoute\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { checkPermission } from '../../services/authService';\n\n/**\n * 受保护的路由组件，用于基于角色的访问控制\n * @param {Object} props 组件属性\n * @param {React.ReactNode} props.children 子组件\n * @param {Array} props.allowedRoles 允许访问的角色数组\n * @returns {React.ReactNode} 渲染的组件\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  allowedRoles = []\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    user\n  } = useSelector(state => state.auth);\n  const location = useLocation();\n\n  // 如果用户未登录，重定向到登录页面，并记录当前尝试访问的路径\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 如果指定了允许的角色，检查用户是否有权限访问\n  if (allowedRoles.length > 0) {\n    const hasPermission = checkPermission(user, allowedRoles);\n\n    // 如果用户没有权限，重定向到无权限页面或仪表板\n    if (!hasPermission) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/unauthorized\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n  // 用户已登录且有权限，渲染子组件\n  return children;\n};\n_s(ProtectedRoute, \"UDfE2F92REFYjZlSzBHsnXttsuE=\", false, function () {\n  return [useSelector, useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useLocation","useSelector","checkPermission","jsxDEV","_jsxDEV","ProtectedRoute","children","allowedRoles","_s","isAuthenticated","user","state","auth","location","to","from","replace","fileName","_jsxFileName","lineNumber","columnNumber","length","hasPermission","_c","$RefreshReg$"],"sources":["D:/文雅竹/作业/大三下/软件工程/NKU_Software/frontend/src/components/ProtectedRoute/index.jsx"],"sourcesContent":["import React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { checkPermission } from '../../services/authService';\n\n/**\n * 受保护的路由组件，用于基于角色的访问控制\n * @param {Object} props 组件属性\n * @param {React.ReactNode} props.children 子组件\n * @param {Array} props.allowedRoles 允许访问的角色数组\n * @returns {React.ReactNode} 渲染的组件\n */\nconst ProtectedRoute = ({ children, allowedRoles = [] }) => {\n  const { isAuthenticated, user } = useSelector(state => state.auth);\n  const location = useLocation();\n\n  // 如果用户未登录，重定向到登录页面，并记录当前尝试访问的路径\n  if (!isAuthenticated) {\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  // 如果指定了允许的角色，检查用户是否有权限访问\n  if (allowedRoles.length > 0) {\n    const hasPermission = checkPermission(user, allowedRoles);\n    \n    // 如果用户没有权限，重定向到无权限页面或仪表板\n    if (!hasPermission) {\n      return <Navigate to=\"/unauthorized\" replace />;\n    }\n  }\n\n  // 用户已登录且有权限，渲染子组件\n  return children;\n};\n\nexport default ProtectedRoute;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,eAAe,QAAQ,4BAA4B;;AAE5D;AACA;AACA;AACA;AACA;AACA;AACA;AANA,SAAAC,MAAA,IAAAC,OAAA;AAOA,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,YAAY,GAAG;AAAG,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAM;IAAEC,eAAe;IAAEC;EAAK,CAAC,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC;EAClE,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;;EAE9B;EACA,IAAI,CAACS,eAAe,EAAE;IACpB,oBAAOL,OAAA,CAACL,QAAQ;MAACe,EAAE,EAAC,QAAQ;MAACH,KAAK,EAAE;QAAEI,IAAI,EAAEF;MAAS,CAAE;MAACG,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpE;;EAEA;EACA,IAAIb,YAAY,CAACc,MAAM,GAAG,CAAC,EAAE;IAC3B,MAAMC,aAAa,GAAGpB,eAAe,CAACQ,IAAI,EAAEH,YAAY,CAAC;;IAEzD;IACA,IAAI,CAACe,aAAa,EAAE;MAClB,oBAAOlB,OAAA,CAACL,QAAQ;QAACe,EAAE,EAAC,eAAe;QAACE,OAAO;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAChD;EACF;;EAEA;EACA,OAAOd,QAAQ;AACjB,CAAC;AAACE,EAAA,CArBIH,cAAc;EAAA,QACgBJ,WAAW,EAC5BD,WAAW;AAAA;AAAAuB,EAAA,GAFxBlB,cAAc;AAuBpB,eAAeA,cAAc;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}